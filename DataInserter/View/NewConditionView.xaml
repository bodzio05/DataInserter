<Window x:Class="DataInserter.View.NewConditionView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:view="clr-namespace:DataInserter.View"
        xmlns:model="clr-namespace:DataInserter.Model"
        mc:Ignorable="d"
        Title="Add new condition" 
        ResizeMode="NoResize"
        DataContext="{Binding NewConditionViewModel}"
        xmlns:conv="clr-namespace:DataInserter.View.Converters"
        Height="250" Width="400" Loaded="Window_Loaded">

    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <!--<ObjectDataProvider x:Key="nodeLevelEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="m:NodeLevel"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="xmlNodeEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="m:XmlNodes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->
    </Window.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" VerticalAlignment="Center" Margin="5">
            <TextBlock Text="Input name of the column in the excel file." 
                       TextWrapping="Wrap" TextAlignment="Justify"/>
            <TextBox Margin="0 10 0 0" 
                     Text="{Binding ExcelColumnName}"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" 
                    VerticalAlignment="Center" Margin="5">
            <TextBlock Text="Choose the level of the change: material, standard or parameter." 
                       TextWrapping="Wrap" TextAlignment="Justify"/>
            <ComboBox Margin="0 10 0 0" x:Name="LevelCombobox" 
                      SelectedValue="{Binding NodeLevel}"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="2" IsEnabled="{Binding IsEnabled, Mode=TwoWay, NotifyOnSourceUpdated=True}"
                    VerticalAlignment="Center" Margin="5">
            <TextBlock Text="Input name of the property in the .xml file." 
                       TextWrapping="Wrap" TextAlignment="Justify"/>
            <ComboBox Margin="0 10 0 0" x:Name="FieldCombobox"
                      SelectedValue="{Binding XmlNodeName}"
                      />
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0">
            <CheckBox Margin="5" Foreground="Red"                     
                      IsChecked="{Binding DeleteFlag, Mode=TwoWay, NotifyOnSourceUpdated=True}">
                <TextBlock TextWrapping="Wrap">
                    Enable delete mode.
                </TextBlock>
            </CheckBox>
        </StackPanel>

        <GroupBox Grid.Row="1" Grid.Column="1" 
                  Header="Parameter properties" 
                  IsEnabled="{Binding EditParameterMode}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" 
                           FontSize="10" Text="Description"
                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="0" Grid.Column="1" MinWidth="50" Margin="2"
                         Text="{Binding ParameterDescription}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <TextBlock Grid.Row="1" Grid.Column="0" 
                           FontSize="10" Text="Context"
                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="1" MinWidth="50" Margin="2"
                         Text="{Binding ParameterContext}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <TextBlock Grid.Row="2" Grid.Column="0" 
                           FontSize="10" Text="Value type"
                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="2" Grid.Column="1" MinWidth="50" Margin="2"
                         Text="{Binding ParameterValueType}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </GroupBox>

        <Button Grid.Column="2" Grid.Row="1"
                Content="Add and close" Width="100" Height="30"
                Command="{Binding AddAndCloseCommand}"/>
    </Grid>
</Window>
